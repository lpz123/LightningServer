// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: redis_proto.proto

package com.maven.lupz.java.LightningServer.database.redis.proto;

public final class redis_proto {
  private redis_proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RedisGroupOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .RedisGroup.Redis_Player redis_player = 1;
    boolean hasRedisPlayer();
    com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player getRedisPlayer();
    com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder getRedisPlayerOrBuilder();
  }
  public static final class RedisGroup extends
      com.google.protobuf.GeneratedMessage
      implements RedisGroupOrBuilder {
    // Use RedisGroup.newBuilder() to construct.
    private RedisGroup(Builder builder) {
      super(builder);
    }
    private RedisGroup(boolean noInit) {}
    
    private static final RedisGroup defaultInstance;
    public static RedisGroup getDefaultInstance() {
      return defaultInstance;
    }
    
    public RedisGroup getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_fieldAccessorTable;
    }
    
    public interface Redis_PlayerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional string roleId = 1;
      boolean hasRoleId();
      String getRoleId();
      
      // optional string roleName = 2;
      boolean hasRoleName();
      String getRoleName();
      
      // optional int32 level = 3;
      boolean hasLevel();
      int getLevel();
    }
    public static final class Redis_Player extends
        com.google.protobuf.GeneratedMessage
        implements Redis_PlayerOrBuilder {
      // Use Redis_Player.newBuilder() to construct.
      private Redis_Player(Builder builder) {
        super(builder);
      }
      private Redis_Player(boolean noInit) {}
      
      private static final Redis_Player defaultInstance;
      public static Redis_Player getDefaultInstance() {
        return defaultInstance;
      }
      
      public Redis_Player getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_Redis_Player_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_Redis_Player_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional string roleId = 1;
      public static final int ROLEID_FIELD_NUMBER = 1;
      private java.lang.Object roleId_;
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getRoleId() {
        java.lang.Object ref = roleId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            roleId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getRoleIdBytes() {
        java.lang.Object ref = roleId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          roleId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional string roleName = 2;
      public static final int ROLENAME_FIELD_NUMBER = 2;
      private java.lang.Object roleName_;
      public boolean hasRoleName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getRoleName() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            roleName_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getRoleNameBytes() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          roleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional int32 level = 3;
      public static final int LEVEL_FIELD_NUMBER = 3;
      private int level_;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLevel() {
        return level_;
      }
      
      private void initFields() {
        roleId_ = "";
        roleName_ = "";
        level_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getRoleIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getRoleNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, level_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getRoleIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getRoleNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, level_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_Redis_Player_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_Redis_Player_fieldAccessorTable;
        }
        
        // Construct using com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          roleId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          roleName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDescriptor();
        }
        
        public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player getDefaultInstanceForType() {
          return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance();
        }
        
        public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player build() {
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player buildPartial() {
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player result = new com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.roleId_ = roleId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.roleName_ = roleName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.level_ = level_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player) {
            return mergeFrom((com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player other) {
          if (other == com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance()) return this;
          if (other.hasRoleId()) {
            setRoleId(other.getRoleId());
          }
          if (other.hasRoleName()) {
            setRoleName(other.getRoleName());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                roleId_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                roleName_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                level_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional string roleId = 1;
        private java.lang.Object roleId_ = "";
        public boolean hasRoleId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getRoleId() {
          java.lang.Object ref = roleId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            roleId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setRoleId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          roleId_ = value;
          onChanged();
          return this;
        }
        public Builder clearRoleId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          roleId_ = getDefaultInstance().getRoleId();
          onChanged();
          return this;
        }
        void setRoleId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          roleId_ = value;
          onChanged();
        }
        
        // optional string roleName = 2;
        private java.lang.Object roleName_ = "";
        public boolean hasRoleName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getRoleName() {
          java.lang.Object ref = roleName_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            roleName_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setRoleName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          roleName_ = value;
          onChanged();
          return this;
        }
        public Builder clearRoleName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          roleName_ = getDefaultInstance().getRoleName();
          onChanged();
          return this;
        }
        void setRoleName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          roleName_ = value;
          onChanged();
        }
        
        // optional int32 level = 3;
        private int level_ ;
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getLevel() {
          return level_;
        }
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000004;
          level_ = value;
          onChanged();
          return this;
        }
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:RedisGroup.Redis_Player)
      }
      
      static {
        defaultInstance = new Redis_Player(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:RedisGroup.Redis_Player)
    }
    
    private int bitField0_;
    // optional .RedisGroup.Redis_Player redis_player = 1;
    public static final int REDIS_PLAYER_FIELD_NUMBER = 1;
    private com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player redisPlayer_;
    public boolean hasRedisPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player getRedisPlayer() {
      return redisPlayer_;
    }
    public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder getRedisPlayerOrBuilder() {
      return redisPlayer_;
    }
    
    private void initFields() {
      redisPlayer_ = com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, redisPlayer_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, redisPlayer_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.internal_static_RedisGroup_fieldAccessorTable;
      }
      
      // Construct using com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRedisPlayerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (redisPlayerBuilder_ == null) {
          redisPlayer_ = com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance();
        } else {
          redisPlayerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.getDescriptor();
      }
      
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup getDefaultInstanceForType() {
        return com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.getDefaultInstance();
      }
      
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup build() {
        com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup buildPartial() {
        com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup result = new com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (redisPlayerBuilder_ == null) {
          result.redisPlayer_ = redisPlayer_;
        } else {
          result.redisPlayer_ = redisPlayerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup) {
          return mergeFrom((com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup other) {
        if (other == com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.getDefaultInstance()) return this;
        if (other.hasRedisPlayer()) {
          mergeRedisPlayer(other.getRedisPlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder subBuilder = com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.newBuilder();
              if (hasRedisPlayer()) {
                subBuilder.mergeFrom(getRedisPlayer());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRedisPlayer(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .RedisGroup.Redis_Player redis_player = 1;
      private com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player redisPlayer_ = com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder> redisPlayerBuilder_;
      public boolean hasRedisPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player getRedisPlayer() {
        if (redisPlayerBuilder_ == null) {
          return redisPlayer_;
        } else {
          return redisPlayerBuilder_.getMessage();
        }
      }
      public Builder setRedisPlayer(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player value) {
        if (redisPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          redisPlayer_ = value;
          onChanged();
        } else {
          redisPlayerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setRedisPlayer(
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder builderForValue) {
        if (redisPlayerBuilder_ == null) {
          redisPlayer_ = builderForValue.build();
          onChanged();
        } else {
          redisPlayerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeRedisPlayer(com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player value) {
        if (redisPlayerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              redisPlayer_ != com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance()) {
            redisPlayer_ =
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.newBuilder(redisPlayer_).mergeFrom(value).buildPartial();
          } else {
            redisPlayer_ = value;
          }
          onChanged();
        } else {
          redisPlayerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearRedisPlayer() {
        if (redisPlayerBuilder_ == null) {
          redisPlayer_ = com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.getDefaultInstance();
          onChanged();
        } else {
          redisPlayerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder getRedisPlayerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRedisPlayerFieldBuilder().getBuilder();
      }
      public com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder getRedisPlayerOrBuilder() {
        if (redisPlayerBuilder_ != null) {
          return redisPlayerBuilder_.getMessageOrBuilder();
        } else {
          return redisPlayer_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder> 
          getRedisPlayerFieldBuilder() {
        if (redisPlayerBuilder_ == null) {
          redisPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder, com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_PlayerOrBuilder>(
                  redisPlayer_,
                  getParentForChildren(),
                  isClean());
          redisPlayer_ = null;
        }
        return redisPlayerBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:RedisGroup)
    }
    
    static {
      defaultInstance = new RedisGroup(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RedisGroup)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisGroup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RedisGroup_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisGroup_Redis_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RedisGroup_Redis_Player_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021redis_proto.proto\"}\n\nRedisGroup\022.\n\014red" +
      "is_player\030\001 \001(\0132\030.RedisGroup.Redis_Playe" +
      "r\032?\n\014Redis_Player\022\016\n\006roleId\030\001 \001(\t\022\020\n\010rol" +
      "eName\030\002 \001(\t\022\r\n\005level\030\003 \001(\005BG\n8com.maven." +
      "lupz.java.LightningServer.database.redis" +
      ".protoB\013redis_proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RedisGroup_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RedisGroup_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RedisGroup_descriptor,
              new java.lang.String[] { "RedisPlayer", },
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.class,
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Builder.class);
          internal_static_RedisGroup_Redis_Player_descriptor =
            internal_static_RedisGroup_descriptor.getNestedTypes().get(0);
          internal_static_RedisGroup_Redis_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RedisGroup_Redis_Player_descriptor,
              new java.lang.String[] { "RoleId", "RoleName", "Level", },
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.class,
              com.maven.lupz.java.LightningServer.database.redis.proto.redis_proto.RedisGroup.Redis_Player.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
